- It was a mistake to calculate the hours first then then the minutes. so i prioritized the minutes loop first.
    (gonna establish the hours baseline based on the starting hours + the hours output after caluclating the minutes)
- I sit the min counter to the start minute before the loop even starts. therefore avoided having to mess with it each time the loop runs!
- I simply added a minute each time the loop runs, if it passes 59 minutes (meaning 60):
        - simply subtract 60 out of the total mins number
        - add 1 hour to the total hours
- in the hours loop:
    - if tod == "PM" and hrs > 11 and day_count < 1:
                day_count = day_count + 1
    - the two lines above fixed the days output in some cases (its mostly been missing a day)
    - example : YOU NEED TO ADD A DAY IF ITS 11 PM + 2 HOURS OR SOMETHING! 


 
- the days of the week loop WONT run if the day count is zero.( there should be at least 1 day in order for the loop to move on to the next day)
- the current day in the week days loop will start from its positon (saturday = weekdays[1] for example), jumping one day ahead each time this loop runs
- in the final output if statement: 
      - day will be None if nothing changed!
      - if day isnt None (if the day hasnt been altered by any of the previous loops) .. do somehting!(give it the proper value before printing it)
      - return the count of days only if the day count is larger than 1
